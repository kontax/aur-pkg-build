#!/bin/bash
#
# setup-repo
#
# Sets up an AUR repository locally from an S3 bucket by downloading the 
# database files, and importing the GPG key for signing built packages. This 
# should be run at the start of the process to get everything set up correctly.
#

set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Requried environment variables
region=${AWS_REGION}        # The AWS region the SQS queue is contained in
repo_bucket=${REPO_BUCKET}  # The bucket name with repo files within AWS
repo_name=${REPO_NAME}      # The name of the DB file within the repository
arch=${REPO_ARCH}           # The architecture to build for (eg. x86_64)
aur_key=${AUR_KEY}          # Name of the SSM param containing the signing key


# Import the required gpg keys
echo "Importing GPG keys for signing built packages"
aws ssm get-parameter \
    --region "${region}" \
    --name "${aur_key}" \
    --with-decryption \
    | jq -r ".Parameter.Value" > aur.key

# Add them to the various key storages
sudo -u makepkg gpg --import aur.key
gpg --homedir /etc/pacman.d/gnupg --import aur.key
GPGKEY=$(gpg --show-keys --keyid-format LONG aur.key \
    | grep sec \
    | grep -o -P '(?<=/)[A-Z0-9]{16}')
rm aur.key

# Pull repo DB file
echo "Pulling database from S3 Repository: ${repo_bucket}/${arch}/${repo_name}"
aws s3 sync \
    --region ${region} \
    --acl public-read \
    --exclude "*" \
    --include "*files.tar.xz" \
    --include "*db.tar.xz" \
    s3://${repo_bucket} ${repo_name}/

echo "Add repo to pacman.conf"
cat >> /etc/pacman.conf << EOF
[${repo_name}]
Server = file:///${repo_bucket}/${arch}
SigLevel = Optional TrustAll
EOF
pacman -Sy
