#!/bin/bash
# 
# build-repo
# 
# Build's an AUR repository database from a git repo, as well as adding any
# packages that were built previously to the database. This prevents any
# syncing issues which may have occurred when building multiple packages
# in parallel.
#

set -Eeuo pipefail
IFS=$'\n\t'

err_report() {
    local parent_lineno="$1"
    local message="$2"
    local code="${3:-1}"

    echo "err_report for build-repo"
    if [[ -n "$message" ]]; then
        echo "$0: ${parent_lineno}: $message" >> /err.log
    else
        echo "$0: ${parent_lineno}" >> /err.log
    fi
    exit $code
}
trap 'err_report ${LINENO} "$0: ${BASH_COMMAND}" $?' ERR

region=${AWS_REGION}        # The AWS region the SQS queue is contained in
repo_name=${REPO_NAME}      # The name of the DB file within the repository
arch=${REPO_ARCH}           # The architecture to build for (eg. x86_64)

if [ "$#" -ne 4 ]; then
  echo -e "Please provide bucket, git URL and packages"
  echo -e "Usage: build-repo <repo-bucket> <git_url> <git_branch> <pkgs>"
  exit 1
fi

repo_bucket=$1
git_url=$2
git_branch=$3
pkgs=$4

# Create the temp /pkg folder
if [ -d /pkg ]; then
    rm -r /pkg
fi

mkdir /pkg
chown -R makepkg /pkg


# Save the PKGBUILD and build that
echo "Building PKGBUILD from git repo"
/build-git "$git_url" "$repo_name" "$git_branch"

# Store each newly built package in the pkg folder
for built_pkg in $pkgs; do
    echo "Downloading $built_pkg"
    aws s3 sync \
        --region ${region} \
        --acl public-read \
        --exclude "*" \
        --include "${built_pkg}*.pkg.tar.zst*" \
        s3://${repo_bucket}/${arch}/ /pkg/

    echo "Copy the package and signature to a temp folder"
    pushd /pkg
    newpkg=$(ls *.pkg.tar.zst)
    mv "${newpkg}"* /${repo_bucket}/${arch}/

    echo "Add it to the repo and sign"
    pushd /${repo_bucket}/${arch}
    sudo -u makepkg repo-add ${repo_name}.db.tar.zst "${newpkg}" -s
    popd
    popd
done

echo "Sync up DB and package to s3"
aws s3 sync \
    --region ${region} \
    --acl public-read \
    --follow-symlinks \
    /${repo_bucket}/${arch}/ s3://${repo_bucket}/${arch}/

